/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nconst slider = new Splide(\"#slider\", {\r\n  perPage: 4,\r\n  gap: \"1rem\",\r\n  flickMaxPages: 1,\r\n  arrows: false,\r\n  gap: 40,\r\n  breakpoints: {\r\n    991: {\r\n      perPage: 2,\r\n    },\r\n    767: {\r\n      perPage: 1,\r\n    },\r\n  },\r\n});\r\n\r\nslider.mount();\r\n\r\nlet countdown;\r\nconst timerDisplay = document.querySelector(\".discount__countdown\");\r\n\r\nconst timer = (seconds) => {\r\n  const currentTime = Date.now();\r\n  const endTime = currentTime + seconds * 1000;\r\n\r\n  countdown = setInterval(() => {\r\n    const secondsLeft = Math.round((endTime - Date.now()) / 1000);\r\n    if (secondsLeft < 0) {\r\n      clearInterval(countdown);\r\n      timer(seconds);\r\n      return;\r\n    }\r\n    displayTimer(secondsLeft);\r\n  }, 1000);\r\n};\r\n\r\nconst displayTimer = (seconds) => {\r\n  const hours = \"00\";\r\n  const minutes = Math.floor(seconds / 60);\r\n  const remainderSeconds = seconds % 60;\r\n\r\n  const display = `${hours} : ${minutes < 10 ? \"0\" : \"\"}${minutes} : ${\r\n    remainderSeconds < 10 ? \"0\" : \"\"\r\n  }${remainderSeconds}`;\r\n  timerDisplay.textContent = display;\r\n};\r\n\r\ntimer(1800);\r\n\n\n//# sourceURL=webpack://application_gulp/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;